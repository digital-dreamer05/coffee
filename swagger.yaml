openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
  description: API documentation for the application

servers:
  - url: /api
    description: API server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        profileImage:
          type: string
    Feedback:
      type: object
      properties:
        id:
          type: string
        rating:
          type: number
          minimum: 1
          maximum: 10
          description: امتیاز از 1 تا 10
        unresolvedProblem:
          type: string
          description: مشکلات حل نشده
        dashboardFrequency:
          type: string
          enum: ["هر روز", "هفتگی", "ماهانه", "به ندرت", "اصلا"]
          description: تناوب استفاده از داشبورد
        featureSuggestions:
          type: string
          description: پیشنهادات برای قابلیت‌های جدید
        username:
          type: string
          description: نام کاربری
        email:
          type: string
          format: email
          description: ایمیل کاربر
        fullName:
          type: string
          description: نام کامل کاربر
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Donation:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        description:
          type: string
        status:
          type: string
          enum: [pending, approved, rejected]
        createdAt:
          type: string
          format: date-time

paths:
  /auth/check-username:
    post:
      tags:
        - Authentication
      summary: Check username availability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        "200":
          description: Username availability check result
          content:
            application/json:
              schema:
                type: object
                properties:
                  available:
                    type: boolean

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  minLength: 3
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid input data

  /auth/verify-email:
    post:
      tags:
        - Authentication
      summary: Verify email with code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
                  minLength: 6
      responses:
        "200":
          description: Email verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string

  /auth/google:
    get:
      tags:
        - Authentication
      summary: Google OAuth login
      parameters:
        - in: query
          name: username
          schema:
            type: string
      responses:
        "302":
          description: Redirect to Google login

  /auth/google/callback:
    get:
      tags:
        - Authentication
      summary: Google OAuth callback
      responses:
        "200":
          description: Google login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
                  token:
                    type: string

  /user/complete-profile:
    post:
      tags:
        - User
      summary: Complete user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profileImage:
                  type: string
                  format: binary
      responses:
        "200":
          description: Profile completed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized

  /feedback:
    post:
      tags:
        - Feedback
      summary: Submit feedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rating
                - dashboardFrequency
                - username
                - email
                - fullName
              properties:
                rating:
                  type: number
                  minimum: 1
                  maximum: 10
                  description: امتیاز از 1 تا 10
                unresolvedProblem:
                  type: string
                  description: مشکلات حل نشده
                dashboardFrequency:
                  type: string
                  enum: ["هر روز", "هفتگی", "ماهانه", "به ندرت", "اصلا"]
                  description: تناوب استفاده از داشبورد
                featureSuggestions:
                  type: string
                  description: پیشنهادات برای قابلیت‌های جدید
                username:
                  type: string
                  description: نام کاربری
                email:
                  type: string
                  format: email
                  description: ایمیل کاربر
                fullName:
                  type: string
                  description: نام کامل کاربر
      responses:
        "201":
          description: Feedback submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "فیدبک با موفقیت ثبت شد"
                  feedback:
                    $ref: "#/components/schemas/Feedback"
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "خطا در ثبت فیدبک"
                  error:
                    type: string

    get:
      tags:
        - Feedback
      summary: Get all feedbacks
      responses:
        "200":
          description: List of feedbacks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Feedback"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "خطا در دریافت فیدبک‌ها"
                  error:
                    type: string

  /donation:
    post:
      tags:
        - Donation
      summary: Create new donation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                  minimum: 1
                description:
                  type: string
      responses:
        "201":
          description: Donation created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Donation"

    get:
      tags:
        - Donation
      summary: Get all donations
      responses:
        "200":
          description: List of donations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Donation"

  /donation/my-donations:
    get:
      tags:
        - Donation
      summary: Get user's donations
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of user's donations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Donation"
        "401":
          description: Unauthorized

  /donation/{id}/status:
    patch:
      tags:
        - Donation
      summary: Update donation status
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [pending, approved, rejected]
      responses:
        "200":
          description: Donation status updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Donation"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden - Admin access required
        "404":
          description: Donation not found
